  // temporary helper function, creates a 1x1x1 cube centered at offset with a index budder.
  std::unique_ptr<LveModel> createCubeModel(LveDevice &device, glm::vec3 offset)
  {
    LveModel::Builder modelBuilder{};
    modelBuilder.vertices = {
        // left face (red) 1.f, 0.f, 0.f
        {{-.5f, -.5f, -.5f}, {1.f, 0.f, 0.f}},
        {{-.5f, .5f, .5f}, {1.f, 0.f, 0.f}},
        {{-.5f, -.5f, .5f}, {1.f, 0.f, 0.f}},
        {{-.5f, .5f, -.5f}, {1.f, 0.f, 0.f}},

        // right face (orange) 0.8f, 0.31f, 0.f
        {{.5f, -.5f, -.5f}, {0.8f, 0.31f, 0.f}},
        {{.5f, .5f, .5f}, {0.8f, 0.31f, 0.f}},
        {{.5f, -.5f, .5f}, {0.8f, 0.31f, 0.f}},
        {{.5f, .5f, -.5f}, {0.8f, 0.31f, 0.f}},

        // top face (yellow, remember y axis points down) 1.f, 1.f, 0.f
        {{-.5f, -.5f, -.5f}, {1.f, 1.f, 0.f}},
        {{.5f, -.5f, .5f}, {1.f, 1.f, 0.f}},
        {{-.5f, -.5f, .5f}, {1.f, 1.f, 0.f}},
        {{.5f, -.5f, -.5f}, {1.f, 1.f, 0.f}},

        // bottom face (white) 1.f, 1.f, 1.f
        {{-.5f, .5f, -.5f}, {1.f, 1.f, 1.f}},
        {{.5f, .5f, .5f}, {1.f, 1.f, 1.f}},
        {{-.5f, .5f, .5f}, {1.f, 1.f, 1.f}},
        {{.5f, .5f, -.5f}, {1.f, 1.f, 1.f}},

        // nose face (blue) 0.f, 0.f, 1.f
        {{-.5f, -.5f, 0.5f}, {0.f, 0.f, 1.f}},
        {{.5f, .5f, 0.5f}, {0.f, 0.f, 1.f}},
        {{-.5f, .5f, 0.5f}, {0.f, 0.f, 1.f}},
        {{.5f, -.5f, 0.5f}, {0.f, 0.f, 1.f}},

        // tail face (green) 0.f, 0.5f, 0.f
        {{-.5f, -.5f, -0.5f}, {0.f, 0.5f, 0.f}},
        {{.5f, .5f, -0.5f}, {0.f, 0.5f, 0.f}},
        {{-.5f, .5f, -0.5f}, {0.f, 0.5f, 0.f}},
        {{.5f, -.5f, -0.5f}, {0.f, 0.5f, 0.f}},

    };
    for (auto &v : modelBuilder.vertices)
    {
      v.position += offset;
    }
    modelBuilder.indices = {0, 1, 2, 0, 3, 1, 4, 5, 6, 4, 7, 5, 8, 9, 10, 8, 11, 9,
                            12, 13, 14, 12, 15, 13, 16, 17, 18, 16, 19, 17, 20, 21, 22, 20, 23, 21};

    return std::make_unique<LveModel>(device, modelBuilder);
  }
